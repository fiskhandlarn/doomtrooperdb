# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: false
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: false
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests,DQL,Command}'

    AppBundle\Command\:
        resource: '../../src/AppBundle/Command/*'
        public: false
        autowire: true
        autoconfigure: true

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Services\DataimportFileLocator:
        public: true
        arguments: ['%kernel.root_dir%']

    # makes classes in src/AppBundle/DataFixtures available to be used as services
    AppBundle\DataFixtures\:
        resource: '../../src/AppBundle/DataFixtures'
        tags: ['doctrine.fixture.orm']
        arguments: [ '@AppBundle\Services\DataimportFileLocator']

    # core exception listener
    core_exception_listener:
        class: AppBundle\Listener\CoreExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onCoreException, priority: 1000 }

    deck_import_service:
        public: true
        class: AppBundle\Services\DeckImportService
        arguments: ["@doctrine.orm.entity_manager"]
    deck_manager:
        public: true
        class: AppBundle\Services\DeckManager
        arguments: ["@doctrine.orm.entity_manager", "@deck_validation_helper", "@diff", "@logger"]
    reviews:
        class: AppBundle\Services\Reviews
        arguments: ["@doctrine.orm.entity_manager"]
    texts:
        class: AppBundle\Services\Texts
        arguments: ["%kernel.root_dir%"]
    diff:
        class: AppBundle\Services\Diff
        arguments: ["@doctrine.orm.entity_manager"]
    cards_data:
        public: true
        class: AppBundle\Services\CardsData
        arguments: ["@doctrine", "@request_stack", "@router", "@assets.packages", "@translator", "%kernel.root_dir%"]
    decklist_manager:
        class: AppBundle\Model\DecklistManager
        shared: false
        arguments: ["@doctrine.orm.entity_manager", "@request_stack", "@router", "@logger"]
    decklist_factory:
        public: true
        class: AppBundle\Model\DecklistFactory
        arguments: ["@doctrine.orm.entity_manager", "@deck_validation_helper", "@texts"]
    deck_validation_helper:
        public: true
        class: AppBundle\Helper\DeckValidationHelper
        arguments: ["@translator"]
    # ACHTUNG MINEN!
    # Configure sendmail to run in piped mode.
    # This is a kludge to get outbound email to work in production again.
    # @link https://swiftmailer.symfony.com/docs/sending.html#using-the-sendmail-transport
    # @link https://stackoverflow.com/a/33815443/307333
    # @todo Revisit when upgrading to Symfony 4 and/or a newer host OS. [ST 2018/11/21]
    swiftmailer.mailer.default.transport:
        class:     Swift_SendmailTransport
        arguments: ['/usr/sbin/sendmail -t']
